// Объявим несколько переменных, которые нам пригодятся:

let int1 = 10, int2 = 11
let string1 = "Hello", string2 = "World!"

//-------------------------------------------------------------------------

// MARK: - Конструкция if ...

// Конструкция, позволяющая проверить, верно ли какое-то условие. После ключевого слова
// if должно находится логическое выражение, или переменная типа Bool. Простой пример, мы
// имеем переменную someCondition, с каким-то булевым значением, и проверяем это значение:

let someCondition = true
if someCondition { }

// Еще мы можем использовать ключевое слово else, чтобы покрыть случай невыполнения условия:

if someCondition {
    // выполнить какой-то код
} else {
    // выполнить какой-то другой код
}

// Так же мы можем использовать конструкцию else if, чтобы обработать разные виды исключений.
// Для демонстрации мы используем переменную типа String и логический оператор равенства ==

let month = "December"

if month == "December" {
    // выполнить какой-то код
} else if month == "May" {
    // выполнить другой код
} else if month == "August" {
    // выполнить другой код
} else {
    // Последним оператором else мы можем покрыть любые другие ситуации
    // Но каждый раз писать else в конце не обязательно
}

// Кроме оператора равенства есть еще несколько операторов, рассмотрим на примере.
// Операторы, применяемые к числам:

if int1 > int2 {
    // Знак "Больше". Проверка, если int1 больше int2 ...
} else if int1 < int2 {
    // Знак "Меньше". Проверка, если int1 меньше int2 ...
}

// Операторы применяемые и к числам и к строкам:

if string1 != string2 {
    // Проверка, если наши строки не равны, то выполним какой-то код
} else if int1 == int2 {
    // Условия разделенные else if взаимоисключающие. Значит, когда сработал else, мы
    // знаем что string1 не равено string2. После else добавим еще одно условие: если
    // наши числа int1 и int2 равны, выполним какой-то код.
}

// MARK: - Условные операторы


// Объявим несколько переменных типа Int, которые нам понадобятся в дальнейшем:

let a: Int = 1
let b: Int = 2
let c: Int = 3

// Условные операторы помогают создать выражение. То, которое  конструкция if ... { } будет
// воспринимать как true или false.

// !=
// Не равно. Например, если a не равно b:
if a != b {
    // выполнить что-то
}

// ==
// Равно (это условный оператор, не путать с присвоением "="). Например, если b равно c:
if b == c {
    // выполнить что-то
}

// &&
// "И". Например, если а не равно b И b равно с:

if (a != b) && (b == c) {
    // выполнить что-то
}

// ||
// Или. Например, если а не равно b ИЛИ b равно с:

if (a != b) || (b == c) {
    // выполнить что-то
}

