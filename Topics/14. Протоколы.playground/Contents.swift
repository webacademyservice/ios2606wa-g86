// MARK: - Протоколы (protocol)

// Протокол является списком требований, которые должен реализовывать объект, который
// реализует, или "конформит" этот протокол.

// Создадим протокол Bird(птица) и укажем, что должен быть реализован метод fly() - летать:

protocol Bird {

    func fly()
}

// Теперь создадим класс орел и структуру голубь, как пример разных видов птиц. Они
// все будут реализовывать протокол Bird, а значит они должны реализовать метод fly()

class Eagle: Bird {

    func fly() {
        // Some code
    }
}

struct Dove: Bird {
    func fly() {
        // Some code
    }
}

// Мы знаем что все они точно реализовали метод полета, и по этому признаку мы можем
// объеденить их в массив. Создадим массив элементов, реализующих протокол Bird:

let arrayOfBirds: [Bird] = [Eagle(), Dove()]

// Теперь мы можем пройтись по этому массиву и вызвать у каждого элемента метод полета
// ведь мы точно знаем, что он реализован:

for bird in arrayOfBirds {
    bird.fly()
}

// Документация:
// https://swiftbook.ru/content/languageguide/protocols/

// Больше о протоколах:
// https://habr.com/ru/company/acronis/blog/420239/
